#Warn All, Off
#SingleInstance

^F1::{
	;This is the main test function
	main()
}

^F2::{
	reload()
}

^F3::{
	issueAlarm()
}

^F4::{
	getMouseCoords()
}

^F5::{
	reload()
}

main(){

}


mouseDrag(x1,y1,x2,y2,speed := 90, clickDelay := 25){
	MouseMove(x1, y1, 50)
	Click("Down")
	Sleep(clickDelay)
	SendEvent("{Click " . x2 . " " . y2 . " 0}")
	;MouseMove(x2, y2, speed)
	Sleep(clickDelay)
	Click("Up")
}

getMouseCoords(){
	; This is for mouse position tracking
	OutputVarX := 0
	OutputVarY := 0
	MouseGetPos(&OutputVarX, &OutputVarY)
	ColorVar := 0
	OutputVarX := OutputVarX ;- 10
	OutputVarY := OutputVarY ;- 10
	PixelGetColor ColorVar, OutputVarX, OutputVarY
	A_Clipboard := Format("{1}, {2}", OutputVarX, OutputVarY)
	msgbox(Format("This is coords: {1}, {2}, The color is {3}",OutputVarX, OutputVarY,ColorVar))
	return
}

waitForTheFirstOf(paths, delay := 500){
	Loop{
		for(k, v in paths){
			coords := detector(v)
			if(coords){
				coords.InsertAt(3,k)
				return coords
			}
			Sleep(Ceil(delay/10))
		}
		Sleep(delay)
	}
}

waitUntil(path, delay := 500){
	Loop{
		coords := detector(v)
		if(coords)
			return coords
		Sleep(delay)
	}
}

detector(path){
	; This function detects images on screen.
	FoundX := 0
	FoundY := 0
	ErrorLvl := ImageSearch(&FoundX, &FoundY, 0, 0, 1920, 1080, A_ScriptDir . "" . path)
	if(ErrorLvl = 1) {
		;MsgBox path." was found at " . FoundX . "x" . FoundY
		return [FoundX, FoundY]
	}
	else{
		;MsgBox(A_ScriptDir . "/images/test.png" . path . " was NOT found.")
		return false
	}
}

issueAlarm(delay := 5, step := 100, stepDuration := 100, beeps := 8, i:=0){
	Loop(beeps){
		SoundBeep(step + i * step, stepDuration)
		Sleep(stepDuration + delay)
		i++
	}
}
